import React, { createContext, useState, useContext } from 'react';

const translations = {
    en: {
        nameCollection: 'TON DNS',
        nameApp1: 'Informer',
        language: 'en',
        theme: 'Theme',
        walletLinkHeader: 'Connect your wallet*',
        price: 'Total:',
        header: "Find the Domain",
        headerstep2: "Send message to owner*",
        placeholder: "Enter name of domain",
        searchButton: "Search",
        errorFetching: "Error fetching data",
        owner: "Owner:",
        site: "Site:",
        marketLinkText: "Buy",
        placeholder2: "Enter your message",
        textsendbtn: "Send",
        marketplace: 'Marketplace:',
        alertText: 'The domain does not exist yet',
        alertCreate: 'Create !',
        enterDomain: 'Enter Domain Name!',
        enterMessage: 'Enter text of message!',
        totalSum: 'Price',
        disclamer: '* - optionary (for connect with owner in TON, create your profile and other utilities)',
        contactslist: 'Proposed owner Telegram contacts',
        followthem: 'Check them for a profile',
        contact: 'Contact',
        loading: 'Searching...',
        notgcontacts: 'No available contacts',
        expiresheader: 'Expires at',
        daytimer: 'days',
        hourtimer: 'hours',
        mintimer: 'minutes',
        sectimer: 'seconds',
        renew: 'Renew',
        bet: 'First Bet',
        moredetails: 'More details:',
        tonviewer: 'explorer',
        onauction: 'On auction',
        dislamerRenew: 'Important: "Renew" does not work with NFTs that are listed for sale or owned by others',
        profile: 'Your Profile',
        rarity: 'Your NFT-score: ',
        userRarity: 'NFT-score: ',
        score: 'Your score: ',
        nomisscore: 'Nomis score: ',
        gift: 'Gift: ',
        domainName: 'Domain name: ',
        avatar: 'Avatar: ',
        username: 'Telegram Username:',
        updateProfileBtn: 'Update',
        styleNFT: 'NFT style',
        ratingHeader: 'Rating',
        ratingPlaceHeader: 'Place',
        ratingUserHeader: 'User',
        ratingNFTScore: 'NFT Score',
        freeoption: 'Free option',
        mounthsubscription: 'Month subscription',
        subscriptionPayHeader: 'Available after paid subscription',
        availableUntil: 'Available until ',
        loadingNFTS: 'Loading NFTs from wallet...',
        profileUpdated: 'Profile details updated',
        buySubscriptionContacts: 'Buy',
        editBtn: 'Edit',
	    invalidDomain: 'The domain can contain only letters (Latin and Cyrillic), numbers, dashes and no spaces. Enter a valid domain.',
	    support: 'Support:',
        ownerField: "Owner",
        alertPayWeb3: 'A monthly subscription costs $50WEB3, if you don not have a $WEB3 token, you can buy it here: ',
        buyWeb3: 'Buy $WEB3',
        p1: 'Create your Profile.',
        p2: 'Your Profile is a unique set combining the characteristics of your NFTs.',
        p3: 'Your unique name in the informant community, giving you an NFT Score depending on rarity.',
        p4: 'NFT that sets the skin of your profile, you can put here an NFT from the collections: TON PUNKS or Lost Dogs for example.',
        p5: 'NFT responsible for the "quality" of the informant and his wallet. Adds an amount of NFT Score proportional to its coefficient.',
        p6: 'NFT from the TELEGRAM Gifts collection, depending on the rarity of the gift, a different amount of NFT Score is added.',
        p7: 'NFT that you can link at will for potential connections with buyers or sellers.',
        menuH1Profile: 'Profile',
        menuH1Ratings: 'Rating',
        menuH1Chat: 'Chat',
        usersInfoHeader: 'Community of informers who have already filled out the Profile.',
        usersInfoHeader2: ' - a high score indicates the "weight" of the users account. It will affect the level of available functionality and is necessary to confirm the proof on your part about your opinion of the user.',
        usersInfoHeader3: 'The feature will be available soon.',
        usersInfoHeader4: 'Chat for community members'

    },
    ru: {
        nameCollection: 'TON DNS',
        nameApp1: 'Informer',
        language: 'ru',
        theme: 'Тема',
        walletLinkHeader: 'Подключите кошелёк*',
        price: 'Всего:',
        header: "Найдите домен",
        headerstep2: "Отправьте сообщение владельцу*",
        placeholder: "Введите название домена",
        searchButton: "Поиск",
        errorFetching: "Ошибка получения данных",
        owner: "Владелец:",
        site: "Сайт:",
        marketLinkText: "Купить",
        placeholder2: "Введите ваше сообщение",
        textsendbtn: "Отправить",
        marketplace: 'Маркетплейс:',
        alertText: 'Домена пока не существует',
        alertCreate: 'Создать !',
        enterDomain: 'Введите название домена!',
        enterMessage: 'Введите текст сообщения!',
        totalSum: 'Стоимость',
        disclamer: '* - опциональный шаг (для связи с владельцем в TON, создания вашего профиля и других утилит)',
        contactslist: 'Возможные контакты в Telegram',
        followthem: 'Проверьте их на наличие профиля',
        contact: 'Контакт',
        loading: 'Поиск...',
        notgcontacts: 'Нет доступных контактов',
        expiresheader: 'Истечет через',
        daytimer: 'дней',
        hourtimer: 'часов',
        mintimer: 'минут',
        sectimer: 'секунд',
        renew: 'Продлить',
        bet: 'Первая ставка',
        moredetails: 'Детальнее об НФТ:',
        tonviewer: 'браузер',
        onauction: 'На аукционе',
        dislamerRenew: 'Важно: "Продлить" не работает с выставленными на продажу или чужими НФТ',
        profile: 'Ваш профиль',
        rarity: 'Ваш NFT-Score: ',
        userRarity: 'НФТ счёт: ',
        score: 'Ваш счёт: ',
        nomisscore: 'Nomis счёт: ',
        gift: 'Подарок: ',
        domainName: 'Доменное имя: ',
        avatar: 'Аватар: ',
        username: 'Юзернейм Телеграм:',
        updateProfileBtn: 'Обновить',
        styleNFT: 'НФТ стиль',
        ratingHeader: 'Лидеры',
        ratingPlaceHeader: 'Место',
        ratingUserHeader: 'Пользователь',
        ratingNFTScore: 'НФТ счёт',
        freeoption: 'Бесплатная опция',
        mounthsubscription: 'Месячная подписка',
        subscriptionPayHeader: 'Доступно после оплаты подписки',
        availableUntil: 'Активна до ',
        loadingNFTS: 'Загрузка НФТ с кошелька...',
        profileUpdated: 'Данные профиля обновлены',
        buySubscriptionContacts: 'Купить',
        editBtn: 'Редактировать',
	    invalidDomain: 'Домен может содержать только буквы(латиница и кириллица),цифры,тире и не иметь пробелов. Введите валидный домен.',
	    support: 'Тех.поддержка:',
        ownerField: "Владелец",
        alertPayWeb3: 'Подиска на месяц стоит 50 $WEB3 , если вы не имеете токена $WEB3 - вы можете приобрести его здесь: ',
        buyWeb3: 'Купить $WEB3',
        p1: 'Создайте ваш Профиль',
        p2: 'Ваш Профиль это уникальный набор сочетающий в себе характеристики ваших NFT .',
        p3: 'Ваше уникальное имя в сообществе информеров, дающее вам NFT Score в зависимсоти от редкости.',
        p4: 'НФТ задающая скин вашего профиля, вы можете поставить сюда нфт из коллекций: TON PUNKS или Lost Dogs например.',
        p5: 'НФТ отвечающая за "качество" информатора и его кошелька. Прибавляет соразмерное своему коэфициенту количество NFT Score.',
        p6: 'НФТ из коллекции TELEGRAM Gifts , в зависимости от редкости подарка прибавляется разное количество NFT Score.',
        p7: 'НФТ который вы можете привязать по желанию для потенциальных связей с покупателями или продавцами.',
        menuH1Profile: 'Профиль',
        menuH1Ratings: 'Рейтинг',
        menuH1Chat: 'Чат',
        usersInfoHeader: 'Сообщество информеров кто уже заполнил Профиль.',
        usersInfoHeader2: ' NFT Score - высокий счёт свидетельствует о "весе" аккаунта пользователя. Он повлияет на уровень доступного функционала и необходим для подтверждения пруфа с вашей стороны о вашем мнении о пользователе.',
        usersInfoHeader3: 'Функция скоро будет достпуна.',
        usersInfoHeader4: 'Чат для участников сообщества'
    },
};

const LanguageContext = createContext();

export const LanguageProvider = ({ children }) => {
    const [language, setLanguage] = useState('en');

    const changeLanguage = (lang) => {
        setLanguage(lang);
    };

    return (
        <LanguageContext.Provider value={{ language, changeLanguage, translations }}>
            {children}
        </LanguageContext.Provider>
    );
};

export const useLanguage = () => useContext(LanguageContext);

